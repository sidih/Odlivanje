<?xml version="1.0" encoding="utf-8"?>
<package xmlns='http://ns.saxonica.com/xslt/export' xmlns:fn='http://www.w3.org/2005/xpath-functions' xmlns:xs='http://www.w3.org/2001/XMLSchema' xmlns:vv='http://saxon.sf.net/generated-variable' xmlns:java-type='http://saxon.sf.net/java-type' when='2022-11-29T13:26:26.065+01:00' id='0' version='30' packageVersion='1' saxonVersion='9.9.1.8' target='JS' targetVersion='1' relocatable='false' implicit='true'>
 <co id='0' binds=''>
  <template name='Q{}lido' flags='os' line='60' module='file:/D:/2022/Odlivanje%20smrti/XSLT/html/mask.xsl' slots='0'>
   <forEach role='body' baseUri='file:/D:/2022/Odlivanje%20smrti/XSLT/html/mask.xsl' ns='xsl=~ tei=http://www.tei-c.org/ns/1.0 ixsl=~ lido=http://www.lido-schema.org xs=~' line='61'>
    <slash simple='2'>
     <slash simple='1'>
      <treat as='node()' jsTest='return SaxonJS.U.isNode(item);' diag='14|3|XPTY0020|'>
       <dot flags='a'/>
      </treat>
      <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}lidoWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;lidoWrap&#39;;'/>
     </slash>
     <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}lido)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;lido&#39;;'/>
    </slash>
    <forEach line='62'>
     <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}descriptiveMetadata)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;descriptiveMetadata&#39;;'/>
     <sequence line='63'>
      <elem name='dt' nsuri=''>
       <valueOf flags='l'>
        <str val='Opisni metapodatki'/>
       </valueOf>
      </elem>
      <elem line='64' name='dd' nsuri=''>
       <sequence line='65'>
        <forEach>
         <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectIdentificationWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectIdentificationWrap&#39;;'/>
         <elem line='66' name='dl' nsuri='' flags='l'>
          <sequence line='67'>
           <elem name='dt' nsuri='' flags='l'>
            <valueOf flags='l'>
             <str val='Identifikacija objekta'/>
            </valueOf>
           </elem>
           <elem line='68' name='dd' nsuri='' flags='l'>
            <elem line='69' name='dl' nsuri='' flags='l'>
             <sequence line='70'>
              <forEach>
               <slash simple='2'>
                <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}repositoryWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;repositoryWrap&#39;;'/>
                <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}repositorySet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;repositorySet&#39;;'/>
               </slash>
               <sequence line='71'>
                <elem name='dt' nsuri='' flags='l'>
                 <valueOf flags='Sl'>
                  <str val='Repozitorij'/>
                 </valueOf>
                </elem>
                <elem line='72' name='dd' nsuri='' flags='l'>
                 <sequence line='73'>
                  <valueOf flags='l'>
                   <fn name='string-join'>
                    <convert from='xs:untypedAtomic' to='xs:string'>
                     <data>
                      <slash simple='2'>
                       <slash simple='2'>
                        <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}repositoryName)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;repositoryName&#39;;'/>
                        <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}legalBodyName)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;legalBodyName&#39;;'/>
                       </slash>
                       <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}appellationValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;appellationValue&#39;;'/>
                      </slash>
                     </data>
                    </convert>
                    <str val=' '/>
                   </fn>
                  </valueOf>
                  <choose line='74'>
                   <or op='or'>
                    <fn name='exists'>
                     <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}workID)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;workID&#39;;'/>
                    </fn>
                    <fn name='exists'>
                     <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}repositoryLocation)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;repositoryLocation&#39;;'/>
                    </fn>
                   </or>
                   <elem line='75' name='dl' nsuri='' flags='l'>
                    <sequence line='76'>
                     <forEach>
                      <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}workID)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;workID&#39;;'/>
                      <sequence line='77'>
                       <elem name='dt' nsuri='' flags='l'>
                        <valueOf flags='l'>
                         <str val='Identifikator dela'/>
                        </valueOf>
                       </elem>
                       <elem line='78' name='dd' nsuri='' flags='l'>
                        <valueOf flags='l'>
                         <convert from='xs:untypedAtomic' to='xs:string'>
                          <data>
                           <dot type='element(Q{http://www.lido-schema.org}workID)'/>
                          </data>
                         </convert>
                        </valueOf>
                       </elem>
                      </sequence>
                     </forEach>
                     <forEach line='80'>
                      <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}repositoryLocation)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;repositoryLocation&#39;;'/>
                      <sequence line='81'>
                       <elem name='dt' nsuri='' flags='l'>
                        <valueOf flags='l'>
                         <str val='Nahajališče'/>
                        </valueOf>
                       </elem>
                       <elem line='82' name='dd' nsuri='' flags='l'>
                        <valueOf flags='l'>
                         <fn name='string-join'>
                          <convert from='xs:untypedAtomic' to='xs:string'>
                           <data>
                            <slash simple='2'>
                             <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}namePlaceSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;namePlaceSet&#39;;'/>
                             <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}appellationValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;appellationValue&#39;;'/>
                            </slash>
                           </data>
                          </convert>
                          <str val=' '/>
                         </fn>
                        </valueOf>
                       </elem>
                      </sequence>
                     </forEach>
                    </sequence>
                   </elem>
                  </choose>
                 </sequence>
                </elem>
               </sequence>
              </forEach>
              <forEach line='88'>
               <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectDescriptionWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectDescriptionWrap&#39;;'/>
               <sequence line='89'>
                <elem name='dt' nsuri='' flags='l'>
                 <valueOf flags='Sl'>
                  <str val='Opisi'/>
                 </valueOf>
                </elem>
                <elem line='90' name='dd' nsuri='' flags='l'>
                 <elem line='91' name='dl' nsuri='' flags='l'>
                  <forEach line='92'>
                   <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectDescriptionSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectDescriptionSet&#39;;'/>
                   <sequence line='93'>
                    <elem name='dt' nsuri='' flags='l'>
                     <sequence line='94'>
                      <choose>
                       <vc op='eq' onEmpty='0' comp='CCC'>
                        <cast as='xs:string' emptiable='1'>
                         <attVal name='Q{http://www.lido-schema.org}type' chk='0'/>
                        </cast>
                        <str val='description'/>
                       </vc>
                       <valueOf flags='Sl'>
                        <str val='Opis'/>
                       </valueOf>
                      </choose>
                      <choose line='95'>
                       <vc op='eq' onEmpty='0' comp='CCC'>
                        <cast as='xs:string' emptiable='1'>
                         <attVal name='Q{http://www.lido-schema.org}type' chk='0'/>
                        </cast>
                        <str val='condition'/>
                       </vc>
                       <valueOf flags='l'>
                        <str val='Stanje predmeta'/>
                       </valueOf>
                      </choose>
                      <choose line='96'>
                       <vc op='eq' onEmpty='0' comp='CCC'>
                        <cast as='xs:string' emptiable='1'>
                         <attVal name='Q{http://www.lido-schema.org}type' chk='0'/>
                        </cast>
                        <str val='conditionNote'/>
                       </vc>
                       <valueOf flags='Sl'>
                        <str val='Oznake'/>
                       </valueOf>
                      </choose>
                     </sequence>
                    </elem>
                    <elem line='98' name='dd' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <fn name='string-join'>
                       <convert from='xs:untypedAtomic' to='xs:string'>
                        <data>
                         <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}descriptiveNoteValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;descriptiveNoteValue&#39;;'/>
                        </data>
                       </convert>
                       <str val=' '/>
                      </fn>
                     </valueOf>
                    </elem>
                   </sequence>
                  </forEach>
                 </elem>
                </elem>
               </sequence>
              </forEach>
              <forEach line='103'>
               <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectMeasurementsWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectMeasurementsWrap&#39;;'/>
               <sequence line='104'>
                <elem name='dt' nsuri='' flags='l'>
                 <valueOf flags='l'>
                  <str val='Mere objekta'/>
                 </valueOf>
                </elem>
                <elem line='105' name='dd' nsuri='' flags='l'>
                 <choose line='107'>
                  <fn name='exists'>
                   <slash simple='2'>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectMeasurementsSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectMeasurementsSet&#39;;'/>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectMeasurements)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectMeasurements&#39;;'/>
                   </slash>
                  </fn>
                  <forEach line='108'>
                   <slash simple='2'>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectMeasurementsSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectMeasurementsSet&#39;;'/>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectMeasurements)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectMeasurements&#39;;'/>
                   </slash>
                   <elem line='109' name='dl' nsuri='' flags='l'>
                    <forEach line='110'>
                     <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}measurementsSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;measurementsSet&#39;;'/>
                     <sequence line='111'>
                      <elem name='dt' nsuri='' flags='l'>
                       <valueOf flags='l'>
                        <fn name='string-join'>
                         <convert from='xs:untypedAtomic' to='xs:string'>
                          <data>
                           <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}measurementType)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;measurementType&#39;;'/>
                          </data>
                         </convert>
                         <str val=' '/>
                        </fn>
                       </valueOf>
                      </elem>
                      <elem line='112' name='dd' nsuri='' flags='l'>
                       <valueOf flags='l'>
                        <fn name='concat'>
                         <atomSing card='?' diag='0|0||fn:concat'>
                          <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}measurementValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;measurementValue&#39;;'/>
                         </atomSing>
                         <str val=' '/>
                         <atomSing card='?' diag='0|2||fn:concat'>
                          <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}measurementUnit)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;measurementUnit&#39;;'/>
                         </atomSing>
                        </fn>
                       </valueOf>
                      </elem>
                     </sequence>
                    </forEach>
                   </elem>
                  </forEach>
                  <true/>
                  <valueOf line='118' flags='l'>
                   <fn name='string-join'>
                    <convert from='xs:untypedAtomic' to='xs:string'>
                     <data>
                      <slash simple='2'>
                       <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}objectMeasurementsSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;objectMeasurementsSet&#39;;'/>
                       <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}displayObjectMeasurements)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;displayObjectMeasurements&#39;;'/>
                      </slash>
                     </data>
                    </convert>
                    <str val=' '/>
                   </fn>
                  </valueOf>
                 </choose>
                </elem>
               </sequence>
              </forEach>
             </sequence>
            </elem>
           </elem>
          </sequence>
         </elem>
        </forEach>
        <forEach line='127'>
         <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventWrap&#39;;'/>
         <elem line='128' name='dl' nsuri='' flags='l'>
          <sequence line='129'>
           <elem name='dt' nsuri='' flags='l'>
            <valueOf flags='Sl'>
             <str val='Dogodki'/>
            </valueOf>
           </elem>
           <elem line='130' name='dd' nsuri='' flags='l'>
            <forEach line='131'>
             <slash simple='2'>
              <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventSet&#39;;'/>
              <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}event)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;event&#39;;'/>
             </slash>
             <elem line='132' name='dl' nsuri='' flags='l'>
              <sequence line='133'>
               <elem name='dt' nsuri='' flags='l'>
                <valueOf flags='l'>
                 <fn name='string-join'>
                  <convert from='xs:untypedAtomic' to='xs:string'>
                   <data>
                    <filter flags='b'>
                     <slash simple='2'>
                      <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventType)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventType&#39;;'/>
                      <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}term)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;term&#39;;'/>
                     </slash>
                     <fn name='empty'>
                      <axis name='attribute' nodeTest='attribute(Q{http://www.w3.org/XML/1998/namespace}lang)' jsTest='var q=SaxonJS.U.nameOfNode(item); return q.uri===&#39;http://www.w3.org/XML/1998/namespace&#39;&amp;&amp;q.local===&#39;lang&#39;;'/>
                     </fn>
                    </filter>
                   </data>
                  </convert>
                  <str val=' '/>
                 </fn>
                </valueOf>
               </elem>
               <elem line='134' name='dd' nsuri='' flags='l'>
                <elem line='135' name='dl' nsuri='' flags='l'>
                 <sequence line='136'>
                  <forEach>
                   <slash simple='2'>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventActor)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventActor&#39;;'/>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}actorInRole)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;actorInRole&#39;;'/>
                   </slash>
                   <sequence line='137'>
                    <elem name='dt' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <fn name='string-join'>
                       <convert from='xs:untypedAtomic' to='xs:string'>
                        <data>
                         <filter flags='b'>
                          <slash simple='2'>
                           <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}roleActor)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;roleActor&#39;;'/>
                           <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}term)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;term&#39;;'/>
                          </slash>
                          <fn name='empty'>
                           <axis name='attribute' nodeTest='attribute(Q{http://www.w3.org/XML/1998/namespace}lang)' jsTest='var q=SaxonJS.U.nameOfNode(item); return q.uri===&#39;http://www.w3.org/XML/1998/namespace&#39;&amp;&amp;q.local===&#39;lang&#39;;'/>
                          </fn>
                         </filter>
                        </data>
                       </convert>
                       <str val=' '/>
                      </fn>
                     </valueOf>
                    </elem>
                    <elem line='138' name='dd' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <fn name='string-join'>
                       <convert from='xs:untypedAtomic' to='xs:string'>
                        <data>
                         <slash simple='2'>
                          <slash simple='2'>
                           <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}actor)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;actor&#39;;'/>
                           <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}nameActorSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;nameActorSet&#39;;'/>
                          </slash>
                          <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}appellationValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;appellationValue&#39;;'/>
                         </slash>
                        </data>
                       </convert>
                       <str val=' '/>
                      </fn>
                     </valueOf>
                    </elem>
                   </sequence>
                  </forEach>
                  <forEach line='140'>
                   <slash simple='2'>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventMaterialsTech)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventMaterialsTech&#39;;'/>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}materialsTech)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;materialsTech&#39;;'/>
                   </slash>
                   <sequence line='141'>
                    <elem name='dt' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <str val='Material in tehnika'/>
                     </valueOf>
                    </elem>
                    <elem line='142' name='dd' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <fn name='string-join'>
                       <convert from='xs:untypedAtomic' to='xs:string'>
                        <data>
                         <slash simple='2'>
                          <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}termMaterialsTech)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;termMaterialsTech&#39;;'/>
                          <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}term)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;term&#39;;'/>
                         </slash>
                        </data>
                       </convert>
                       <str val=' '/>
                      </fn>
                     </valueOf>
                    </elem>
                   </sequence>
                  </forEach>
                  <forEach line='144'>
                   <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventDate)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventDate&#39;;'/>
                   <sequence line='145'>
                    <elem name='dt' nsuri='' flags='l'>
                     <valueOf flags='Sl'>
                      <str val='Datum'/>
                     </valueOf>
                    </elem>
                    <elem line='146' name='dd' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <fn name='string-join'>
                       <convert from='xs:untypedAtomic' to='xs:string'>
                        <data>
                         <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}displayDate)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;displayDate&#39;;'/>
                        </data>
                       </convert>
                       <str val=' '/>
                      </fn>
                     </valueOf>
                    </elem>
                   </sequence>
                  </forEach>
                  <forEach line='148'>
                   <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}eventDescriptionSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;eventDescriptionSet&#39;;'/>
                   <sequence line='149'>
                    <elem name='dt' nsuri='' flags='l'>
                     <valueOf flags='Sl'>
                      <str val='Opis'/>
                     </valueOf>
                    </elem>
                    <elem line='150' name='dd' nsuri='' flags='l'>
                     <valueOf flags='l'>
                      <fn name='string-join'>
                       <convert from='xs:untypedAtomic' to='xs:string'>
                        <data>
                         <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}descriptiveNoteValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;descriptiveNoteValue&#39;;'/>
                        </data>
                       </convert>
                       <str val=' '/>
                      </fn>
                     </valueOf>
                    </elem>
                   </sequence>
                  </forEach>
                 </sequence>
                </elem>
               </elem>
              </sequence>
             </elem>
            </forEach>
           </elem>
          </sequence>
         </elem>
        </forEach>
       </sequence>
      </elem>
     </sequence>
    </forEach>
   </forEach>
  </template>
 </co>
 <co id='1' binds='0 0'>
  <mode onNo='TC' flags='dW' patternSlots='0'>
   <templateRule prec='0' prio='-0.5' seq='0' rank='0' minImp='0' slots='3' flags='s' line='12' module='file:/D:/2022/Odlivanje%20smrti/XSLT/html/mask.xsl'>
    <p.nodeTest role='match' test='document-node()' jsTest='return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);'/>
    <let role='action' baseUri='file:/D:/2022/Odlivanje%20smrti/XSLT/html/mask.xsl' ns='xsl=~ tei=http://www.tei-c.org/ns/1.0 ixsl=~ lido=http://www.lido-schema.org xs=~' line='13' var='Q{}ident' as='item()*' slot='0' eval='8'>
     <lookup>
      <ifCall name='Q{http://saxonica.com/ns/interactiveXSLT}query-params' type='map(*)'/>
      <str val='id'/>
     </lookup>
     <let line='14' var='Q{http://saxon.sf.net/generated-variable}v0' as='xs:anyAtomicType*' slot='1' eval='4'>
      <data>
       <varRef name='Q{}ident' slot='0'/>
      </data>
      <forEach>
       <filter flags='b'>
        <slash simple='2'>
         <filter flags='b'>
          <slash simple='2'>
           <filter flags='b'>
            <slash simple='2'>
             <slash simple='2'>
              <slash simple='2'>
               <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}TEI)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;TEI&#39;;'/>
               <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}text)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;text&#39;;'/>
              </slash>
              <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}body)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;body&#39;;'/>
             </slash>
             <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}div)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;div&#39;;'/>
            </slash>
            <vc op='eq' onEmpty='0' comp='CCC'>
             <cast as='xs:string' emptiable='1'>
              <attVal name='Q{}type' chk='0'/>
             </cast>
             <str val='lido'/>
            </vc>
           </filter>
           <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}list)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;list&#39;;'/>
          </slash>
          <vc op='eq' onEmpty='0' comp='CCC'>
           <cast as='xs:string' emptiable='1'>
            <attVal name='Q{}type' chk='0'/>
           </cast>
           <str val='deathMask'/>
          </vc>
         </filter>
         <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
        </slash>
        <gc op='=' card='N:1' comp='GAC|http://www.w3.org/2005/xpath-functions/collation/codepoint'>
         <varRef name='Q{http://saxon.sf.net/generated-variable}v0' slot='1'/>
         <fn name='substring-after'>
          <cvUntyped to='xs:string'>
           <attVal name='Q{http://www.w3.org/XML/1998/namespace}id' chk='0'/>
          </cvUntyped>
          <str val='sistory-'/>
         </fn>
        </gc>
       </filter>
       <resultDoc line='15' global='#&#xD;&#xA;#Tue Nov 29 13:26:26 CET 2022&#xD;&#xA;' local='#&#xD;&#xA;#Tue Nov 29 13:26:26 CET 2022&#xD;&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xD;&#xA;'>
        <str role='href' val='#maska'/>
        <sequence role='content' line='16'>
         <elem name='h3' nsuri=''>
          <sequence>
           <att name='class' flags='l'>
            <str val='text-center'/>
           </att>
           <valueOf line='17' flags='l'>
            <fn name='string-join'>
             <convert from='xs:untypedAtomic' to='xs:string'>
              <data>
               <filter flags='b'>
                <slash simple='2'>
                 <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}list)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;list&#39;;'/>
                 <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
                </slash>
                <vc op='eq' onEmpty='0' comp='CCC'>
                 <cast as='xs:string' emptiable='1'>
                  <data>
                   <first>
                    <axis name='preceding-sibling' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}label)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;label&#39;;'/>
                   </first>
                  </data>
                 </cast>
                 <str val='Naziv'/>
                </vc>
               </filter>
              </data>
             </convert>
             <str val=' '/>
            </fn>
           </valueOf>
          </sequence>
         </elem>
         <forEach line='19'>
          <fn name='document'>
           <slash simple='2'>
            <slash simple='2'>
             <slash simple='2'>
              <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}list)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;list&#39;;'/>
              <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}item)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;item&#39;;'/>
             </slash>
             <axis name='child' nodeTest='element(Q{http://www.tei-c.org/ns/1.0}ptr)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.tei-c.org/ns/1.0&#39;&amp;&amp;q.local===&#39;ptr&#39;;'/>
            </slash>
            <axis name='attribute' nodeTest='attribute(Q{}target)' jsTest='return item.name===&#39;target&#39;'/>
           </slash>
          </fn>
          <choose line='22'>
           <fn name='exists'>
            <slash simple='2'>
             <slash simple='2'>
              <slash simple='2'>
               <slash simple='2'>
                <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}lidoWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;lidoWrap&#39;;'/>
                <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}lido)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;lido&#39;;'/>
               </slash>
               <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}administrativeMetadata)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;administrativeMetadata&#39;;'/>
              </slash>
              <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceWrap&#39;;'/>
             </slash>
             <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceSet&#39;;'/>
            </slash>
           </fn>
           <elem line='23' name='div' nsuri=''>
            <sequence>
             <att name='class' flags='l'>
              <str val='row'/>
             </att>
             <elem line='24' name='div' nsuri='' flags='l'>
              <sequence>
               <att name='class' flags='l'>
                <str val='medium-6 columns'/>
               </att>
               <forEach line='25'>
                <slash simple='2'>
                 <slash simple='2'>
                  <slash simple='2'>
                   <slash simple='2'>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}lidoWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;lidoWrap&#39;;'/>
                    <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}lido)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;lido&#39;;'/>
                   </slash>
                   <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}administrativeMetadata)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;administrativeMetadata&#39;;'/>
                  </slash>
                  <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceWrap)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceWrap&#39;;'/>
                 </slash>
                 <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceSet)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceSet&#39;;'/>
                </slash>
                <let line='26' var='Q{}filePath' as='element(Q{http://www.lido-schema.org}linkResource)*' slot='2' eval='4'>
                 <slash simple='2'>
                  <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceRepresentation)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceRepresentation&#39;;'/>
                  <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}linkResource)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;linkResource&#39;;'/>
                 </slash>
                 <sequence line='27'>
                  <elem name='figure' nsuri='' flags='l'>
                   <sequence>
                    <att name='class' flags='l'>
                     <str val='figure'/>
                    </att>
                    <elem line='28' name='figcaption' nsuri='' flags='l'>
                     <sequence>
                      <att name='class' flags='l'>
                       <str val='caption'/>
                      </att>
                      <valueOf line='29' flags='l'>
                       <fn name='string-join'>
                        <convert from='xs:untypedAtomic' to='xs:string'>
                         <data>
                          <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceDescription)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceDescription&#39;;'/>
                         </data>
                        </convert>
                        <str val=' '/>
                       </fn>
                      </valueOf>
                     </sequence>
                    </elem>
                    <elem line='31' name='a' nsuri='' flags='l'>
                     <sequence>
                      <att name='class' flags='l'>
                       <str val='image-popup'/>
                      </att>
                      <att name='href' flags='l'>
                       <fn name='string-join'>
                        <convert from='xs:untypedAtomic' to='xs:string'>
                         <data>
                          <varRef name='Q{}filePath' slot='2'/>
                         </data>
                        </convert>
                        <str val=' '/>
                       </fn>
                      </att>
                      <att name='target' flags='l'>
                       <str val='_blank'/>
                      </att>
                      <elem line='32' name='img' nsuri='' flags='l'>
                       <sequence>
                        <att name='src' flags='l'>
                         <fn name='string-join'>
                          <convert from='xs:untypedAtomic' to='xs:string'>
                           <data>
                            <varRef name='Q{}filePath' slot='2'/>
                           </data>
                          </convert>
                          <str val=' '/>
                         </fn>
                        </att>
                        <att name='alt' flags='l'>
                         <str val='Slika'/>
                        </att>
                        <att name='style' flags='l'>
                         <str val='height:350px'/>
                        </att>
                       </sequence>
                      </elem>
                     </sequence>
                    </elem>
                    <choose line='34'>
                     <fn name='exists'>
                      <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceSource)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceSource&#39;;'/>
                     </fn>
                     <elem line='35' name='p' nsuri='' flags='l'>
                      <sequence line='37'>
                       <valueOf flags='l'>
                        <str val='Pravice: '/>
                       </valueOf>
                       <valueOf flags='l'>
                        <fn name='string-join'>
                         <convert from='xs:untypedAtomic' to='xs:string'>
                          <data>
                           <slash simple='2'>
                            <slash simple='2'>
                             <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}resourceSource)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;resourceSource&#39;;'/>
                             <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}legalBodyName)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;legalBodyName&#39;;'/>
                            </slash>
                            <axis name='child' nodeTest='element(Q{http://www.lido-schema.org}appellationValue)' jsTest='var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri===&#39;http://www.lido-schema.org&#39;&amp;&amp;q.local===&#39;appellationValue&#39;;'/>
                           </slash>
                          </data>
                         </convert>
                         <str val=' '/>
                        </fn>
                       </valueOf>
                      </sequence>
                     </elem>
                    </choose>
                   </sequence>
                  </elem>
                  <choose line='41'>
                   <isLast test='0'/>
                   <elem line='42' name='br' nsuri='' flags='l'>
                    <empty/>
                   </elem>
                  </choose>
                 </sequence>
                </let>
               </forEach>
              </sequence>
             </elem>
             <elem line='46' name='div' nsuri='' flags='l'>
              <sequence>
               <att name='class' flags='l'>
                <str val='medium-6 columns'/>
               </att>
               <callT line='47' name='Q{}lido' bSlot='0'/>
              </sequence>
             </elem>
            </sequence>
           </elem>
           <true/>
           <callT line='52' name='Q{}lido' bSlot='1'/>
          </choose>
         </forEach>
        </sequence>
       </resultDoc>
      </forEach>
     </let>
    </let>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <output>
  <property name='{http://saxon.sf.net/}stylesheet-version' value='30'/>
 </output>
 <decimalFormat/>
</package>
<?Σ 9b8d4772?>
